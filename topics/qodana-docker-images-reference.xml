<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Docker image reference manual"
       id="qodana-docker-images-reference">

    <chapter id="Docker+ide+intro" title="Introduction">
        <!-- This needs to be reworded -->
        <p>This section outlines configuration options available for the Dockerized version of %product% and universal for
            all linters. It also contains several references to integrated development environments (IDE). This list
            shows the correspondence between linters and IDEs:</p>
        <list>
            <li>IntelliJ IDEA for all JVM (Java, Android, and Kotlin for Server Side) linters, such as:
                <list>
                    <li><code style="inline" lang="shell"><a href="qodana-jvm.md">jetbrains/qodana-jvm</a></code></li>
                    <li><code style="inline" lang="shell"><a href="qodana-jvm-community.md">jetbrains/qodana-jvm-community</a></code></li>
                    <li><code style="inline" lang="shell"><a href="qodana-jvm-android.md">jetbrains/qodana-jvm-android</a></code></li>
                </list>
            </li>
            <li>PhpStorm for the <code style="inline" lang="shell"><a href="qodana-php.md">jetbrains/qodana-php</a></code> PHP linter</li>
            <li>PyCharm for the <code style="inline" lang="shell"><a href="qodana-python.md">jetbrains/qodana-python</a></code> Python linter</li>
            <li>WebStorm for the <code style="inline" lang="shell"><a href="qodana-js.md">jetbrains/qodana-js</a></code> JavaScript linter</li>
        </list>

        <p>For the sake of convenience, all these linters are denoted as
            <code style="inline" lang="shell">jetbrains/qodana-&lt;linter&gt;</code>, where
            <code style="inline" lang="shell">&lt;linter&gt;</code> is a placeholder for a specific linter name.</p>
    </chapter>

    <chapter id="Docker+image+paths" title="Docker image paths">

        <table>
            <tr>
                <td>Path</td>
                <td>Description</td>
            </tr>
            <tr>
                <td>
                    <code>/data/project</code>
                </td>
                <td>Root directory of the project to be analyzed</td>
            </tr>
            <tr>
                <td>
                    <code>/data/results</code>
                </td>
                <td>Directory to store the analysis results, needs to be empty before running a %product% linter</td>
            </tr>
            <tr>
                <td>
                    <code>/opt/idea</code>
                </td>
                <td>IDE distributive directory</td>
            </tr>
            <tr>
                <td>
                    <code>/root/.config/idea</code>
                </td>
                <td>IDE configuration directory</td>
            </tr>
            <tr>
                <td>
                    <code>/data/profile.xml</code>
                </td>
                <td>Used if a profile was not previously configured either via the CLI or the <code>qodana.yaml</code>
                    file. See the <a anchor="Order+of+resolving+a+profile">Order of profile resolving</a> section.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter id="Configuration+options" title="Configuration options">

        <p>Docker images can be configured using several CLI options. All these options can be divided into three
            groups. </p>
        <p>The first group requires the equal sign (<code>&#61;</code>) to be placed between the option name and its
            argument like <code>--project-dir=/path/to/project</code>.</p>
        <p>The second group uses the space character (<code>&#160;</code>) to separate option names and their arguments
        like <code>−−baseline /path/to/sarif/file</code>.</p>
        <p>The third group of options does not require any arguments to be supplied with, as you can see it in case of
        the <code>--save-report</code> option.</p>

        <p>You can run the <code style="inline" lang="shell">docker run jetbrains/qodana-&lt;linter&gt;</code> command to see
            this list in the CLI.</p>

        <chapter id="Configuration+options+directories" title="Directories">

        <table column-width="fixed">
            <tr>
                <td width="20%">Option</td>
                <td>Description</td>
            </tr>
            <tr>
                <td><code>-i</code>,
                    <code>--project-dir=</code>
                </td>
                <td>Root directory of the inspected project (default: current working directory <code>/data/project</code>).
                </td>
            </tr>
            <tr>
                <td><code>-o</code>,
                    <code>--results-dir=</code>
                </td>
                <td>Directory to save %product% inspection results to (default: <code>/data/results</code>).
                </td>
            </tr>
            <tr>
                <td><code>-r</code>,
                    <code>--report-dir=</code>
                </td>
                <td>Directory to save an HTML report to (default: <code>/data/results/report</code>).
                </td>
            </tr>
            <tr>
                <td>
                    <code>--cache-dir=</code>
                </td>
                <td>Cache directory (default: <code>/data/cache</code>)
                </td>
            </tr>
            <tr>
                <td>
                    <code>-d</code>,
                    <code>--source-directory</code>
                </td>
                <td>Directory to be inspected. If not specified, the whole project is inspected by default</td>
            </tr>
        </table>
        </chapter>

        <chapter id="Configuration+options+baseline" title="Baseline">

            <p>To learn more about the baseline feature, see the
                <a anchor="Run+in+baseline+mode">Run in the baseline mode</a> example, or study the
                <a href="qodana-baseline.xml">Baseline</a> section.</p>

            <table column-width="fixed">
                <tr>
                    <td width="20%">Option</td>
                    <td>Description</td>
                </tr>
                <tr>
                    <!-- The -b option needs to be tested. I am not sure it exists. If it works the same, so it needs to be added to the Baseline feature description -->
                    <td><code>-b</code>,
                        <code>--baseline</code>
                    </td>
                    <td>Run <a href="qodana-baseline.xml">in the baseline mode</a>. Provide the path to an existing SARIF
                        report to be used in the baseline state calculation.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>--baseline-include-absent</code>
                    </td>
                    <!-- This may be referenced to the Baseline feature too -->
                    <td>Include in the output report the results from the baseline run that are absent in the current run
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="Configuration+options+qodana+cloud" title="Qodana Cloud">

            <note><p>Qodana Cloud is currently under development.</p></note>

            <table column-width="fixed">
            <tr>
                <td width="20%">Option</td>
                <td>Description</td>
            </tr>
            <tr>
                <td><code>--send-report</code></td>
                <td>Send the inspection report to Qodana Cloud, requires the <code>--token</code> option to be specified.
                    </td>
            </tr>
            <tr>
                <td><code>-t</code>,
                    <code>--token=</code>
                </td>
                <td>Qodana Cloud integration token.</td>
            </tr>
            <tr>
                <td><code>-a</code>,
                    <code>--analysis-id=</code>
                </td>
                <td>Unique report identifier (GUID) to be used by Qodana Cloud.</td>
            </tr>
            </table>
        </chapter>

        <chapter id="Configuration+options+profile+configuration" title="Profile configuration">

            <p>%product% profile can be configured using these CLI options. Alternatively, you can configure %product%
                using the <code>qodana.yaml</code> file as described in the <a href="qodana-yaml.md">Configure profile</a> section.</p>

            <table column-width="fixed">
                <tr>
                    <td width="20%">Option</td>
                    <td>Description</td>
                </tr>
                <tr>
                    <td><code>--disable-sanity</code></td>
                    <td>Skip running the inspections configured by the <code>sanity</code> profile (default: enabled).</td>
                </tr>
                <tr>
                    <td><code>-n</code>,
                        <code>--profile-name</code>
                    </td>
                    <td>Profile name defined the in project. Note that this name does not necessarily
                        match the name of the containing file stored in <code>.idea/inspectionProfiles</code>. The actual
                        name is stored as the <code>&lt;option name="myName" value="%\profileName%" /&gt;</code> value in the
                        profile <code>xml</code> file and is visible in the IDE user interface.
                    </td>
                </tr>
                <tr>
                    <td><code>-p</code>,
                        <code>--profile-path</code>
                    </td>
                    <td>Absolute path to the profile file.</td>
                </tr>
                <tr>
                    <td><code>--run-promo</code></td>
                    <td>Set to <code>true</code> to have the application run the inspections configured by the
                        <code>promo</code> profile; set to <code>false</code> otherwise. By  default, a
                        <code>promo</code> run is enabled if the application is executed with the
                        <code>default</code> profile and is disabled otherwise.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>-t</code>,
                        <code>--stub-profile</code>
                    </td>
                    <td>Path to the fallback profile file. This option be applied in case the profile was not specified using
                        any available options.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter id="Configuration+options+miscellaneous" title="Miscellaneous">

            <table column-width="fixed">
                <tr>
                    <td width="20%">Option</td>
                    <td>Description</td>
                </tr>
                <tr>
                    <td><code>-s</code>,
                        <code>--save-report</code>
                    </td>
                    <td>Generate HTML report</td>
                </tr>
                <tr>
                    <td><code>-w</code>,
                        <code>--show-report</code>
                    </td>
                    <td>Serve HTML report on port 8080</td>
                </tr>
                <tr>
                    <td><code>--property=</code></td>
                    <td>Set a Java property to be used while running %product%. This option can be repeated multiple
                        times for setting multiple Java properties. </td>
                </tr>
                <tr>
                    <td>
                        <code>--fail-threshold</code>
                    </td>
                    <!-- Check whether the punctuation marks here are correct -->
                    <td>Set the number of problems that will serve as a quality gate. If this number is reached, the
                        inspection run is terminated.
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>-c</code>,
                        <code>--changes</code>
                    </td>
                    <td>Inspect uncommitted changes and report new problems.</td>
                </tr>
                <tr>
                    <td>
                        <code>--script</code>
                    </td>
                    <td>Override the default run scenario (default: <code style="inline">default</code>).</td>
                </tr>
            </table>
        </chapter>

    </chapter>

    <chapter id="qodana-execution-tuneup" title="Examples of execution tuneup">

    <chapter id="Override+the+default+inspection+profile" title="Override the default inspection profile">
        <code style="block" lang="shell">
            docker run ... -v &lt;inspection-profile.xml&gt;:/data/profile.xml \
            jetbrains/qodana&ndash;&lt;linter&gt;
        </code>
        <p>If no profile is specified, the default <code>qodana.recommended</code> profile is used. For more options
            of how to specify a profile, see <a anchor="Order+of+resolving+a+profile">Order of resolving a
                profile</a>.
            For more about available profiles, see <a href="qodana-yaml.md" anchor="Set+up+a+profile">Set up a profile</a>.
        </p>
    </chapter>

        <chapter id="Save+a+report+as+HTML" title="Save a report as HTML">
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; --save-report
            </code>
            <p>By default, the HTML report is stored in a separate <code>report/</code> subdirectory under the <code>
                results
            </code> directory. This location could be configured with <code>--report-dir</code>.
            </p>
        </chapter>

        <chapter id="Display+a+report+in+HTML" title="Display a report in HTML">
            <code style="block" lang="shell">
                docker run ... -p 8080:8080 jetbrains/qodana&ndash;&lt;linter&gt; --show-report
            </code>
            <!-- This needs to be improved regarding the articles -->
            <p>After the inspection is finished, the container will not exit and will listen on port <code>8080</code>.
                You can connect to <code>http://localhost:8080</code> to see the results. To stop the web server, press
                <shortcut>Ctrl-C</shortcut> in the Docker console.
            </p>
        </chapter>

        <chapter id="Change+the+Heap+size" title="Change the heap size">
            <code style="block" lang="shell">
                docker run ... -e _JAVA_OPTIONS=-Xmx6g jetbrains/qodana&ndash;&lt;linter&gt;
            </code>
            <p>By default, Heap size is set to 80% of the host RAM.</p>
        </chapter>

        <chapter id="Log+INFO+messages+to+STDOUT" title="Log INFO messages to STDOUT">
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; \
                --property=idea.log.config.file=info.xml
            </code>
            <p>The default log level for STDOUT is <code>WARN</code>.
            </p>
        </chapter>

        <chapter id="Use+a+different+idea-properties-file" title="Use a different 'idea.properties' file">
            <code style="block" lang="shell">
                docker run ... -e IDEA_PROPERTIES=/data/project/idea.properties \
                jetbrains/qodana&ndash;&lt;linter&gt;
            </code>
        </chapter>

        <chapter id="Turn+off+user+statistics" title="Turn off user statistics">
            <p>To disable the <a href="%docker-general-guide-page-url%" anchor="Usage+statistics">reporting of usage
                statistics</a>, adjust the <code>idea.headless.enable.statistics</code> value:
            </p>
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; \
                --property=idea.headless.enable.statistics=false
            </code>
        </chapter>

        <chapter id="Manage+plugins" title="Manage plugins">
            <p>You can add any free IntelliJ platform plugins or your custom plugin by using the following command:</p>
            <code style="block" lang="shell">
                docker run ... -v /your/custom/path/%\pluginName%:/opt/idea/plugins/%\pluginName% \
                jetbrains/qodana&ndash;&lt;linter&gt;
            </code>
            <p>To optimize the most common cases, some bundled plugins are disabled by default. You can check the whole
                list of disabled plugins in <code>/root/.config/idea/disabled_plugins.txt</code>.
            </p>
            <p>Plugins for core libraries and frameworks are enabled by default.</p>

            <p>To change the plugin list, do any of the following:</p>
            <list>
                <li>
                    <p>Override <code>disabled_plugins.txt</code> by mounting your own file:
                    </p>
                    <code style="block" lang="shell">
                        docker run ... -v $empty_file$:/root/.config/idea/disabled_plugins.txt \
                        jetbrains/qodana&ndash;&lt;linter&gt;
                    </code>
                </li>
                <li>
                    <p>Use IDE properties <code>idea.required.plugins.id</code> and <code>
                        idea.suppressed.plugins.id</code>:
                    </p>
                    <code style="block" lang="shell">
                        docker run ... jetbrains/qodana&ndash;&lt;linter&gt; \
                        --property=idea.required.plugins.id=JavaScript,org.intellij.grails \
                        --property=idea.suppressed.plugins.id=com.intellij.spring.security
                    </code>
                </li>
            </list>
            <note>
                <p>
                    Paid plugins are not yet supported. Each vendor must clarify licensing terms for CI usage and collaborate
                    with us to make it work.
                </p>
            </note>
        </chapter>

        <chapter id="Analyze+changes" title="Analyze changes">
            <p>%product% lets you check only changed files:</p>
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; \
                --property=idea.required.plugins.id=Git4Idea,Subversion,hg4idea --changes
            </code>
            <p>You can adjust the <code>idea.required.plugins.id</code> value and keep only the VCS plugin suitable for
                your project.
            </p>
        </chapter>

        <chapter id="Run+in+baseline+mode" title="Run in the baseline mode">
            <p>In the baseline run mode, each new %product% run is compared to some initial run selected as a "baseline".
                This can help in situations when you have no possibility to fix old problems and rather want to prevent
                the appearance of new ones. To learn more about the baseline feature, study the
                <a href="qodana-baseline.xml">Baseline</a> section.
            </p>
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; \
                --baseline &lt;baseline-path&gt; [--baseline-include-absent]
            </code>
            <p>where <code>&lt;baseline-path&gt;</code> is the path to a <code>qodana.sarif.json</code> file
                from an earlier run. If the <code>--baseline-include-absent</code> option is provided, the inspection
                results will include <i>absent</i> problems, that is the problems detected only in the baseline run but
                not in the current run.
            </p>
            <p>After the inspection is finished, %product% displays the summary of the current project state
                compared to the baseline.
            </p>
            <code style="block" lang="shell">
                Baseline comparison result - UNCHANGED: 10, NEW: 5, ABSENT: 3
            </code>
            <p>where the detected problems are aggregated as follows:</p>
            <list>
                <li>
                    <code>new</code>: The problem was detected only in the current run but not in the baseline run.
                </li>
                <li>
                    <code>absent</code>: The problem was detected only in the baseline run but not in the current run.
                </li>
                <li>
                    <code>unchanged</code>: The problem was detected both in the current run and in the baseline run.
                </li>
            </list>
            <p>
                The <a href="qodana-sarif-output.md">SARIF output report</a> will contain the per-problem
                information on the baseline state.
            </p>
        </chapter>

        <chapter id="Set+a+quality+gate" title="Set a quality gate">
            <p>%product% lets you configure a "quality gate", that is, the number of problems
                that will act as a threshold. If the threshold number is reached, the inspection run is terminated.
            </p>
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; --fail-threshold &lt;number&gt;
            </code>
            <p>When running in the <a anchor="Run+in+baseline+mode">baseline mode</a>, a threshold is calculated as the sum
                of <i>new</i> and <i>absent</i> problems. <i>Unchanged</i> results are ignored.
            </p>
            <note>
                <p>You can also specify the threshold by adding the <code>failThreshold: &lt;number&gt;</code> node
                    to <a href="qodana-yaml.md">qodana.yaml</a>. The value specified as the <code>docker run</code> option
                    will override the one specified in <code>qodana.yaml</code>.
                </p>
            </note>
        </chapter>

        <chapter id="Run+as+non-root" title="Run as non-root">
            <p>By default, the container is run as the <code>root</code> user so that %product% can read any
                volumes bind-mounted with the project and write the results. As a result, files in the <code>results/
                </code> folder are owned by the <code>root</code> after the run.
            </p>
            <p>To avoid this, you can run the container as a regular user:</p>
            <code style="block" lang="shell">
                docker run -u $UID ...
                # or
                docker run -u $(id -u):$(id -g) ...
            </code>
            <p>Note that in this case the <code>results/</code> folder on host should already be created and owned by
                you. Otherwise, Docker will create it as <code>root</code> and %product% will not be able to write
                to it.
            </p>
        </chapter>

        <chapter id="Cache+dependencies" title="Cache dependencies">
            <p>You can decrease the time for a %product% run by persisting cache from one run to another. For
                example, package and dependency management tools such as Maven, Gradle, npm, and Yarn keep a local cache
                of downloaded dependencies.
            </p>
            <p>By default, %product% would save caches to folder <code>/data/cache</code> inside container. This
                location could be changed via <code>--cache-dir</code> CLI argument. The data inside is per-repository,
                so you can pass cache from <code>branch-a</code> to build checking <code>branch-b</code>. In this case,
                only new dependencies would be downloaded, if they were added.
            </p>
            <p>Example of a local run:
            </p>
            <code style="block" lang="shell">
                docker run --rm -it -p 8080:8080 \
                -v &lt;source-directory&gt;/:/data/project/ \
                -v &lt;output-directory&gt;/:/data/results/ \
                -v &lt;cache-directory&gt;/:/data/cache/ \
                jetbrains/qodana&ndash;&lt;linter&gt; --show-report
            </code>
            <p>In this case mapping the same <code>&lt;cache-directory&gt;</code> would speed up the second run.
            </p>
            <p>In a GitHub workflow you can utilise <a
                    href="https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows">
                actions/cache</a>, see <a href="%docker-general-guide-page-url%" anchor="Run+analysis+in+CI">full example</a>.
            </p>
            <p>
                GitLab CI also has <a href="https://docs.gitlab.com/ee/ci/caching/">cache</a> which can be stored <a
                    href="https://docs.gitlab.com/ee/ci/yaml/README.html#cachepaths">only inside
            </a> the project directory. In this case, we recommend excluding the cache folder from inspection via <a
                    href="qodana-yaml.md" anchor="include-example">qodana.yaml</a>.
            </p>
        </chapter>

        <chapter id="Override+qodana+workflow" title="Override the default run scenario">
            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; --script &lt;script-name&gt;:parameters
            </code>

            <p>You can override the standard %product% run scenario by using the <code style="inline">--script</code> option.
                By default, %product% employs the <code style="inline">default</code> scenario, which is equivalent to running:</p>

            <code style="block" lang="shell">
                docker run ... jetbrains/qodana&ndash;&lt;linter&gt; --script default
            </code>
        </chapter>
    </chapter>

    <chapter id="Order+of+resolving+a+profile" title="Order of profile resolving">
        <p>
            %product% checks the configuration parameters for resolving an inspection profile in this order:
        </p>
        <list type="decimal">
            <li>
                Profile with the <code>%\name%</code> name from the command-line option <code>--profile-name
                %\name%</code>.
            </li>
            <li>
                Profile by the path <code>%\path%</code> from the command-line option <code>--profile-path %\path%</code>.
            </li>
            <li>
                Profile with the name <code>%\name%</code> from <code>qodana.yaml</code>.
            </li>
            <li>
                Profile by the path <code>%\path%</code> from <code>qodana.yaml</code>.
            </li>
            <li>
                Profile mounted to <code>/data/profile.xml</code>.
            </li>
            <li>
                Fall back to using the default <code>qodana.recommended</code> profile.
            </li>
        </list>
    </chapter>
</topic>
